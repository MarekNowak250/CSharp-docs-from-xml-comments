<Application x:Class="DescriptorGenerator.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DescriptorGenerator.Desktop"
             StartupUri="MainWindow.xaml" Startup="Application_Startup">
    <Application.Resources>
        <SolidColorBrush x:Key="BackgroundColor" Color="#1A1A1A" />
        <SolidColorBrush x:Key="BackgroundColor_L1" Color="#2B2B2B" />
        <SolidColorBrush x:Key="BackgroundColor_L2" Color="#3C3C3C" />
        <SolidColorBrush x:Key="TextColor" Color="#f1f2f3"/>
        <SolidColorBrush x:Key="PrimaryColor" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#4A4A4A"/>
        <SolidColorBrush x:Key="AccentColor" Color="#f1f2f3"/>

        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=BackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=TextColor}"/>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=TextColor}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=AccentColor}"/>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=SecondaryColor}"/>
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=TextColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=PrimaryColor}"/>
            <Style.Resources>
                <Style TargetType="{x:Type Expander}">
                    <Setter Property="Foreground" Value="{StaticResource ResourceKey=TextColor}"/>
                </Style>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.4"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=AccentColor}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=BackgroundColor_L1}"/>
            <Setter Property="Background" Value="{StaticResource ResourceKey=PrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=TextColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="{TemplateBinding Margin}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
